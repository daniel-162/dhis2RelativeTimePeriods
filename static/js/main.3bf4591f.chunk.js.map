{"version":3,"sources":["components/layouts/dashboard/listItems.js","components/layouts/dashboard/Title.js","components/layouts/dashboard/Chart.js","components/layouts/dashboard/Summary.js","components/layouts/dashboard/Dashboard.js","components/App.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Button","className","variant","color","Title","props","Typography","component","gutterBottom","children","createData","time","amount","data","undefined","Chart","theme","useTheme","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","type","main","dot","useStyles","makeStyles","depositContext","flex","Deposits","classes","Copyright","align","Link","href","Date","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","secondarySize","Dashboard","React","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kiBAoCeA,EAzBb,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gBAExB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,YAExB,kBAACC,EAAA,EAAD,CAAQC,UAAW,MAAMC,QAAQ,WAAWC,MAAM,WAAlD,W,gBC1BW,SAASC,EAAMC,GAC5B,OACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKL,QAAQ,KAAKC,MAAM,UAAUK,cAAY,GACjEH,EAAMI,UCDb,SAASC,EAAWC,EAAMC,GACxB,MAAO,CAAED,OAAMC,UAGjB,IAAMC,EAAO,CACXH,EAAW,QAAS,GACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,MACpBA,EAAW,aAASI,IAoCPC,MAjCf,WACE,IAAMC,EAAQC,cAEd,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACd,EAAD,UACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,KAAMA,EACNM,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,EACRC,KAAM,KAGR,kBAAC,IAAD,CAAOC,QAAQ,OAAOC,OAAQT,EAAMU,QAAQC,KAAKC,YACjD,kBAAC,IAAD,CAAOH,OAAQT,EAAMU,QAAQC,KAAKC,WAChC,kBAAC,IAAD,CACEC,MAAO,IACPC,SAAS,OACTC,MAAO,CAAEC,WAAY,SAAUC,KAAMjB,EAAMU,QAAQC,KAAK5B,UAH1D,eAQF,kBAAC,IAAD,CAAMmC,KAAK,WAAWV,QAAQ,SAASC,OAAQT,EAAMU,QAAQ3B,QAAQoC,KAAMC,KAAK,QC1CpFC,EAAYC,YAAW,CAC3BC,eAAgB,CACdC,KAAM,KAIK,SAASC,IACtB,IAAMC,EAAUL,IAChB,OACE,kBAAC,IAAMnB,SAAP,KACE,kBAACd,EAAD,uBACA,kBAACE,EAAA,EAAD,CAAYC,UAAU,IAAIL,QAAQ,MAAlC,eAGA,kBAACI,EAAA,EAAD,CAAYH,MAAM,gBAAgBF,UAAWyC,EAAQH,gBAArD,uBAGA,6BACA,kBAACjC,EAAA,EAAD,CAAYC,UAAU,IAAIL,QAAQ,MAAlC,cCDN,SAASyC,IACP,OACE,kBAACrC,EAAA,EAAD,CAAYJ,QAAQ,QAAQC,MAAM,gBAAgByC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAM1C,MAAM,UAAU2C,KAAK,KAA3B,gCAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAEMX,EAAYC,aAAW,SAAAtB,GAAK,MAAK,CACrCiC,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNxC,EAAMyC,OAAON,SAElBO,OAAQ,CACNC,OAAQ3C,EAAM2C,OAAOC,OAAS,EAC9BC,WAAY7C,EAAM8C,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhD,EAAM8C,YAAYE,OAAOC,MACjCC,SAAUlD,EAAM8C,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLT,WAAY7C,EAAM8C,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhD,EAAM8C,YAAYE,OAAOC,MACjCC,SAAUlD,EAAM8C,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBxB,QAAS,QAEXyB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACX/C,SAAU,WACVgD,WAAY,SACZR,MA3CgB,IA4ChBT,WAAY7C,EAAM8C,YAAYC,OAAO,QAAS,CAC5CC,OAAQhD,EAAM8C,YAAYE,OAAOC,MACjCC,SAAUlD,EAAM8C,YAAYI,SAASK,kBAGzCQ,iBAAiB,aACfC,UAAW,SACXnB,WAAY7C,EAAM8C,YAAYC,OAAO,QAAS,CAC5CC,OAAQhD,EAAM8C,YAAYE,OAAOC,MACjCC,SAAUlD,EAAM8C,YAAYI,SAASC,gBAEvCG,MAAOtD,EAAMiE,QAAQ,IACpBjE,EAAMkE,YAAYC,GAAG,MAAQ,CAC5Bb,MAAOtD,EAAMiE,QAAQ,KAGzBG,aAAcpE,EAAMyC,OAAON,QAC3BkC,QAAS,CACPT,SAAU,EACVU,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAYzE,EAAMiE,QAAQ,GAC1BS,cAAe1E,EAAMiE,QAAQ,IAE/BU,MAAO,CACLnC,QAASxC,EAAMiE,QAAQ,GACvB/B,QAAS,OACTqC,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,KAEVQ,cAAe,CACbR,OAAQ,IACRhB,MAAO,SAII,SAASyB,IACtB,IAAMrD,EAAUL,IADkB,EAEV2D,IAAMC,UAAS,GAFL,mBAE3BC,EAF2B,KAErBC,EAFqB,KAS5BC,EAAmBC,YAAK3D,EAAQiD,MAAOjD,EAAQmD,aAErD,OACE,yBAAK5F,UAAWyC,EAAQO,MACtB,kBAACqD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQzE,SAAS,WAAW7B,UAAWoG,YAAK3D,EAAQgB,OAAQwC,GAAQxD,EAAQ0B,cAC1E,kBAACoC,EAAA,EAAD,CAASvG,UAAWyC,EAAQS,SAC1B,kBAACsD,EAAA,EAAD,CACEC,KAAK,QACLvG,MAAM,UACNwG,aAAW,cACXC,QAjBe,WACvBT,GAAQ,IAiBAlG,UAAWoG,YAAK3D,EAAQ8B,WAAY0B,GAAQxD,EAAQgC,mBAEpD,kBAAC,IAAD,OAEF,kBAACpE,EAAA,EAAD,CAAYC,UAAU,KAAKL,QAAQ,KAAKC,MAAM,UAAU0G,QAAM,EAAC5G,UAAWyC,EAAQiC,OAAlF,uBAGA,kBAAC8B,EAAA,EAAD,CAAYtG,MAAM,WACd,kBAAC,IAAD,SAIR,kBAAC2G,EAAA,EAAD,CACE5G,QAAQ,YACRwC,QAAS,CACPiD,MAAOU,YAAK3D,EAAQmC,aAAcqB,GAAQxD,EAAQqC,mBAEpDmB,KAAMA,GAEN,yBAAKjG,UAAWyC,EAAQW,aACtB,kBAACoD,EAAA,EAAD,CAAYG,QAnCM,WACxBT,GAAQ,KAmCA,kBAAC,IAAD,QAGJ,kBAACY,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAAOtH,IAET,0BAAMO,UAAWyC,EAAQ2C,SACvB,yBAAKpF,UAAWyC,EAAQ0C,eACxB,kBAAC6B,EAAA,EAAD,CAAWC,SAAS,KAAKjH,UAAWyC,EAAQ8C,WAC1C,kBAAC2B,EAAA,EAAD,CAAM3B,WAAS,EAACP,QAAS,GAGvB,kBAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAOvH,UAAWmG,GAChB,kBAAC,EAAD,QAIJ,kBAACe,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAOvH,UAAWyC,EAAQoD,eACxB,kBAAC,EAAD,SAIN,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC/E,EAAD,UC7KGgF,MAXf,WACE,OACC,6BAEC,kBAAC5B,EAAD,QCIgB6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3bf4591f.chunk.js","sourcesContent":["import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport CategoryIcon from '@material-ui/icons/Category'\r\nimport ApartmentIcon from '@material-ui/icons/Apartment'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nconst mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <CategoryIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary='Indicators' />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ApartmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary='Organization Unit' />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AccessTimeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary='Period' />\r\n    </ListItem>\r\n    <Button className= 'btn' variant='outlined' color='primary'>\r\n      Update\r\n    </Button>\r\n  </div>\r\n)\r\n\r\nexport default mainListItems\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00', 0),\r\n  createData('03:00', 300),\r\n  createData('06:00', 600),\r\n  createData('09:00', 800),\r\n  createData('12:00', 1500),\r\n  createData('15:00', 2000),\r\n  createData('18:00', 2400),\r\n  createData('21:00', 2400),\r\n  createData('24:00', undefined),\r\n];\r\n\r\nfunction Chart() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>#</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Dummy Data\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Title from './Title'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n})\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Displayed Data</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        [INDICATOR]\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        [ORGANIZATION UNIT]\r\n      </Typography>\r\n      <div>\r\n      <Typography component=\"p\" variant=\"h5\">\r\n        [PERIOD]\r\n      </Typography>\r\n        \r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Box from '@material-ui/core/Box'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Link from '@material-ui/core/Link'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport mainListItems from './listItems'\r\nimport Chart from './Chart'\r\nimport Summary from './Summary'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        DHIS2 Relative Time Periods,\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 340,\r\n  },\r\n  secondarySize: {\r\n    height: 240,\r\n    width: 240,\r\n  },\r\n}))\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  }\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            RelativeTimePeriods\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n              <AccountCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={2}>\r\n            \r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Chart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Viewing Data */}\r\n            <Grid item xs={12} md={4} lg={9}>\r\n              <Paper className={classes.secondarySize}>\r\n                <Summary />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport Dashboard from './layouts/dashboard/Dashboard'\n\nfunction App() {\n  return (\n  \t<div>\n\n\t  \t<Dashboard/>  \n\t    \n\n\t</div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}